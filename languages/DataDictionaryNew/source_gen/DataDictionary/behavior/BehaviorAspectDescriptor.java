package DataDictionary.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myExclusiveSpecializationInLine__BehaviorDescriptor = new ExclusiveSpecializationInLine__BehaviorDescriptor();
  private final BHDescriptor myFieldStructure__BehaviorDescriptor = new FieldStructure__BehaviorDescriptor();
  private final BHDescriptor myNoExclusiveSpecializationInLine__BehaviorDescriptor = new NoExclusiveSpecializationInLine__BehaviorDescriptor();
  private final BHDescriptor myAggregationAsAField__BehaviorDescriptor = new AggregationAsAField__BehaviorDescriptor();
  private final BHDescriptor myField__BehaviorDescriptor = new Field__BehaviorDescriptor();
  private final BHDescriptor myAbstractField__BehaviorDescriptor = new AbstractField__BehaviorDescriptor();
  private final BHDescriptor mySetOfComponentsAsAField__BehaviorDescriptor = new SetOfComponentsAsAField__BehaviorDescriptor();
  private final BHDescriptor myStructureAsAField__BehaviorDescriptor = new StructureAsAField__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x5947026603af5eb4L;
    myConceptBehaviorIds[1] = 0x5947026603b238f7L;
    myConceptBehaviorIds[2] = 0x5947026603c72d78L;
    myConceptBehaviorIds[3] = 0x5c982cbd675b3b19L;
    myConceptBehaviorIds[4] = 0x62cd8899af6dcd98L;
    myConceptBehaviorIds[5] = 0x62cd8899af74f69dL;
    myConceptBehaviorIds[6] = 0x62cd8899af7681e1L;
    myConceptBehaviorIds[7] = 0x62cd8899af79708bL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myExclusiveSpecializationInLine__BehaviorDescriptor;
      case 1:
        return myFieldStructure__BehaviorDescriptor;
      case 2:
        return myNoExclusiveSpecializationInLine__BehaviorDescriptor;
      case 3:
        return myAggregationAsAField__BehaviorDescriptor;
      case 4:
        return myField__BehaviorDescriptor;
      case 5:
        return myAbstractField__BehaviorDescriptor;
      case 6:
        return mySetOfComponentsAsAField__BehaviorDescriptor;
      case 7:
        return myStructureAsAField__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
